---
import BaseLayout from '../layouts/BaseLayout.astro';

const blogCategories = [
  {
    title: "Tech Deep Dives",
    description: "In-depth analysis of the latest technologies, frameworks, and development methodologies",
    icon: "ðŸ”¬",
    gradient: "from-blue-500 to-cyan-500"
  },
  {
    title: "Project Case Studies", 
    description: "Real-world examples and lessons learned from successful software development projects",
    icon: "ðŸ“Š",
    gradient: "from-purple-500 to-pink-500"
  },
  {
    title: "Industry Trends",
    description: "Market insights and predictions on the future of software development and IT outsourcing", 
    icon: "ðŸ“ˆ",
    gradient: "from-green-500 to-teal-500"
  }
];
---

<BaseLayout title="Blog">
  <!-- Hero Section with Animations -->
  <section class="relative min-h-screen flex items-center justify-center overflow-hidden">
    <!-- Animated Background -->
    <div class="absolute inset-0 bg-gradient-to-br from-gray-50 via-white to-blue-50 dark:from-gray-900 dark:via-gray-800 dark:to-blue-900">
      <!-- Floating shapes -->
      <div class="floating-shape shape-1"></div>
      <div class="floating-shape shape-2"></div>
      <div class="floating-shape shape-3"></div>
      <div class="floating-shape shape-4"></div>
    </div>
    
    <!-- Particle Canvas -->
    <div class="absolute inset-0">
      <canvas id="blog-particles" class="w-full h-full"></canvas>
    </div>
    
    <div class="relative z-10 max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
      <!-- Animated Badge -->
      <div class="animated-badge mb-8">
        <span class="pulse-dot"></span>
        Blog launching soon with expert insights
      </div>
      
      <!-- Main Title with Animation -->
      <h1 class="hero-title mb-6">
        <span class="title-line">Insights & Knowledge</span>
        <span class="title-line">Hub</span>
      </h1>
      
      <p class="hero-subtitle mb-12">
        Stay updated with cutting-edge development trends, expert insights, 
        and industry best practices from our team of seasoned developers.
      </p>
      
      <!-- Coming Soon Badge with Animation -->
      <div class="coming-soon-badge">
        <div class="badge-glow"></div>
        <div class="w-3 h-3 bg-blue-500 rounded-full mr-3 animate-pulse"></div>
        <span>Premium content launching Q1 2025</span>
      </div>
    </div>
  </section>

  <!-- Content Categories with Morphing Backgrounds -->
  <section class="py-32 bg-white dark:bg-gray-900 relative overflow-hidden">
    <!-- Morphing Background Shapes -->
    <div class="absolute inset-0">
      <div class="morph-shape morph-1"></div>
      <div class="morph-shape morph-2"></div>
    </div>
    
    <div class="relative z-10 max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center mb-20">
        <h2 class="section-title mb-6">What to Expect</h2>
        <div class="title-underline mx-auto"></div>
        <p class="section-subtitle mt-6">
          High-quality content from industry experts and experienced developers
        </p>
      </div>
      
      <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
        {blogCategories.map((category, index) => (
          <div class="category-card card-tinted" data-aos="zoom-in" data-aos-delay={index * 150}>
            <!-- Gradient border on hover -->
            <div class={`absolute inset-0 bg-gradient-to-r ${category.gradient} rounded-3xl opacity-0 group-hover:opacity-100 transition-opacity duration-300 -z-10`}>
              <div class="absolute inset-[2px] bg-white dark:bg-gray-800 rounded-3xl"></div>
            </div>
            
            <div class="relative">
              <!-- Icon -->
              <div class="category-icon">{category.icon}</div>
              
              <!-- Title -->
              <h3 class="category-title">{category.title}</h3>
              
              <!-- Description -->
              <p class="category-description">{category.description}</p>
              
              <!-- Glow Effect -->
              <div class="category-glow"></div>
            </div>
          </div>
        ))}
      </div>
    </div>
  </section>

  <!-- Newsletter Section with Glassmorphism -->
  <section class="py-32 bg-gray-50 dark:bg-gray-800 relative overflow-hidden">
    <!-- Animated Background Pattern -->
    <div class="absolute inset-0 opacity-10">
      <div class="animated-grid"></div>
    </div>
    
    <div class="relative z-10 max-w-3xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
      <div class="newsletter-container">
        <h2 class="section-title mb-6">Be the First to Know</h2>
        <p class="newsletter-subtitle mb-12">
          Get exclusive early access to our premium content library with insights 
          from industry leaders and battle-tested development strategies.
        </p>
        
        <form class="newsletter-form" netlify netlify-honeypot="bot-field" name="blog-newsletter">
          <input type="hidden" name="form-name" value="blog-newsletter" />
          <div class="hidden">
            <label>Don't fill this out: <input name="bot-field" /></label>
          </div>
          
          <div class="form-group">
            <input 
              type="email" 
              name="email"
              placeholder="Enter your email address"
              required
              class="newsletter-input"
            />
            <button type="submit" class="newsletter-button">
              <span>Get Early Access</span>
              <div class="button-shine"></div>
            </button>
          </div>
        </form>
        
        <div class="newsletter-features">
          <div class="feature-item">
            <span class="feature-icon">ðŸŽ¯</span>
            <span>Expert Insights</span>
          </div>
          <div class="feature-item">
            <span class="feature-icon">âš¡</span>
            <span>Weekly Updates</span>
          </div>
          <div class="feature-item">
            <span class="feature-icon">ðŸ”’</span>
            <span>No Spam Ever</span>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- CTA Section with Animated Gradient -->
  <section class="py-32 bg-gradient-to-r from-blue-600 via-purple-600 to-pink-600 relative overflow-hidden animated-gradient">
    <!-- Animated Background Pattern -->
    <div class="absolute inset-0 opacity-20">
      <div class="animated-pattern"></div>
    </div>
    
    <div class="relative z-10 max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
      <h2 class="cta-title mb-8">
        Need Expert Developers Now?
      </h2>
      <p class="cta-subtitle mb-12">
        Don't wait for insights. Transform your vision into reality with our hand-vetted 
        development experts who deliver exceptional results.
      </p>
      
      <div class="cta-buttons">
        <a href="/contact" class="cta-primary">
          <span>Start Your Project</span>
          <div class="button-shine"></div>
        </a>
        
        <div class="contact-info">
          <span>Call us: </span>
          <a href="tel:+12029925235" class="phone-link">+1 (202) 992-5235</a>
        </div>
      </div>
    </div>
  </section>

  <!-- Advanced Styles and Animations -->
  <style>
    /* Floating Geometric Shapes */
    .floating-shape {
      position: absolute;
      background: linear-gradient(45deg, rgba(59, 130, 246, 0.1), rgba(147, 51, 234, 0.1));
      border-radius: 50%;
      animation: float-complex 20s infinite ease-in-out;
      backdrop-filter: blur(10px);
    }
    
    .shape-1 { width: 120px; height: 120px; top: 15%; left: 10%; animation-delay: 0s; }
    .shape-2 { width: 80px; height: 80px; top: 25%; right: 20%; animation-delay: 5s; }
    .shape-3 { width: 100px; height: 100px; top: 65%; left: 15%; animation-delay: 10s; }
    .shape-4 { width: 90px; height: 90px; top: 75%; right: 25%; animation-delay: 15s; }
    
    @keyframes float-complex {
      0%, 100% { transform: translate(0px, 0px) rotate(0deg) scale(1); opacity: 0.4; }
      25% { transform: translate(40px, -40px) rotate(90deg) scale(1.1); opacity: 0.7; }
      50% { transform: translate(-30px, 50px) rotate(180deg) scale(0.9); opacity: 0.3; }
      75% { transform: translate(50px, 30px) rotate(270deg) scale(1.05); opacity: 0.8; }
    }
    
    /* Animated Badge */
    .animated-badge {
      display: inline-flex;
      align-items: center;
      padding: 16px 32px;
      background: rgba(255, 255, 255, 0.1);
      backdrop-filter: blur(20px);
      border: 1px solid rgba(255, 255, 255, 0.2);
      border-radius: 50px;
      color: #3b82f6;
      font-weight: 600;
      animation: badge-float 3s ease-in-out infinite;
    }
    
    .dark .animated-badge {
      color: #60a5fa;
    }
    
    .pulse-dot {
      width: 10px;
      height: 10px;
      background: #3b82f6;
      border-radius: 50%;
      margin-right: 12px;
      animation: pulse-glow 2s ease-in-out infinite;
    }
    
    @keyframes badge-float {
      0%, 100% { transform: translateY(0px); box-shadow: 0 10px 30px rgba(59, 130, 246, 0.2); }
      50% { transform: translateY(-5px); box-shadow: 0 20px 40px rgba(59, 130, 246, 0.4); }
    }
    
    @keyframes pulse-glow {
      0%, 100% { transform: scale(1); box-shadow: 0 0 0 0 rgba(59, 130, 246, 0.7); }
      50% { transform: scale(1.1); box-shadow: 0 0 0 10px rgba(59, 130, 246, 0); }
    }
    
    /* Hero Title Animation */
    .hero-title {
      font-size: clamp(3rem, 8vw, 6rem);
      font-weight: 900;
      line-height: 1.1;
      color: #1f2937;
      text-align: center;
      overflow: hidden;
    }
    
    .dark .hero-title {
      color: #ffffff;
    }
    
    .title-line {
      display: block;
      animation: slide-up-stagger 1.2s cubic-bezier(0.23, 1, 0.32, 1);
    }
    
    .title-line:nth-child(2) {
      animation-delay: 0.2s;
    }
    
    @keyframes slide-up-stagger {
      0% { transform: translateY(100%); opacity: 0; }
      100% { transform: translateY(0); opacity: 1; }
    }
    
    /* Hero Subtitle */
    .hero-subtitle {
      font-size: clamp(1.125rem, 3vw, 1.5rem);
      color: #6b7280;
      max-width: 800px;
      margin: 0 auto;
      line-height: 1.6;
      animation: fade-in-up 1.5s cubic-bezier(0.23, 1, 0.32, 1) 0.4s both;
    }
    
    .dark .hero-subtitle {
      color: #d1d5db;
    }
    
    /* Coming Soon Badge */
    .coming-soon-badge {
      position: relative;
      display: inline-flex;
      align-items: center;
      padding: 20px 40px;
      background: rgba(255, 255, 255, 0.15);
      backdrop-filter: blur(30px);
      border: 1px solid rgba(255, 255, 255, 0.2);
      border-radius: 60px;
      color: #1f2937;
      font-weight: 600;
      font-size: 1.1rem;
      overflow: hidden;
      animation: coming-soon-float 4s ease-in-out infinite;
    }
    
    .dark .coming-soon-badge {
      color: #ffffff;
    }
    
    .badge-glow {
      position: absolute;
      top: -50%;
      left: -50%;
      width: 200%;
      height: 200%;
      background: linear-gradient(45deg, transparent, rgba(59, 130, 246, 0.1), transparent);
      animation: badge-glow-rotate 3s linear infinite;
    }
    
    @keyframes coming-soon-float {
      0%, 100% { transform: translateY(0px) scale(1); }
      50% { transform: translateY(-8px) scale(1.02); }
    }
    
    @keyframes badge-glow-rotate {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }
    
    /* Morphing Background Shapes */
    .morph-shape {
      position: absolute;
      border-radius: 60% 40% 30% 70% / 60% 30% 70% 40%;
      animation: morph-blog 18s ease-in-out infinite;
      opacity: 0.05;
    }
    
    .dark .morph-shape {
      opacity: 0.1;
    }
    
    .morph-1 {
      width: 350px;
      height: 350px;
      background: linear-gradient(45deg, #3b82f6, #8b5cf6);
      top: 10%;
      left: 5%;
      animation-delay: 0s;
    }
    
    .morph-2 {
      width: 280px;
      height: 280px;
      background: linear-gradient(45deg, #06b6d4, #3b82f6);
      bottom: 15%;
      right: 10%;
      animation-delay: 9s;
    }
    
    @keyframes morph-blog {
      0%, 100% { 
        border-radius: 60% 40% 30% 70% / 60% 30% 70% 40%;
        transform: translate(0px, 0px) rotate(0deg);
      }
      50% { 
        border-radius: 30% 60% 70% 40% / 50% 60% 30% 60%;
        transform: translate(60px, -60px) rotate(180deg);
      }
    }
    
    /* Section Styling */
    .section-title {
      font-size: clamp(2.5rem, 6vw, 4rem);
      font-weight: 900;
      color: #1f2937;
      text-align: center;
    }
    
    .dark .section-title {
      color: #ffffff;
    }
    
    .section-subtitle {
      font-size: 1.25rem;
      color: #6b7280;
      text-align: center;
      max-width: 600px;
      margin: 0 auto;
      line-height: 1.7;
    }
    
    .dark .section-subtitle {
      color: #d1d5db;
    }
    
    .title-underline {
      width: 80px;
      height: 4px;
      background: linear-gradient(45deg, #3b82f6, #8b5cf6);
      border-radius: 2px;
      animation: expand-underline 2s cubic-bezier(0.23, 1, 0.32, 1);
    }
    
    @keyframes expand-underline {
      0% { width: 0; }
      100% { width: 80px; }
    }
    
    /* Category Cards */
    .category-card {
      position: relative;
      padding: 3rem 2rem;
      background: rgba(255, 255, 255, 0.9);
      backdrop-filter: blur(20px);
      border: 1px solid rgba(255, 255, 255, 0.3);
      border-radius: 24px;
      text-align: center;
      transition: all 0.5s cubic-bezier(0.23, 1, 0.32, 1);
      overflow: hidden;
      cursor: pointer;
      group: true;
    }
    
    .dark .category-card {
      background: rgba(31, 41, 55, 0.9);
      border: 1px solid rgba(75, 85, 99, 0.3);
    }
    
    .category-card:hover {
      transform: translateY(-15px) scale(1.02);
      box-shadow: 0 30px 60px rgba(59, 130, 246, 0.3);
    }
    
    .category-icon {
      font-size: 3.5rem;
      margin-bottom: 1.5rem;
      animation: icon-bounce 1s cubic-bezier(0.68, -0.55, 0.265, 1.55) 0.5s both;
    }
    
    .category-title {
      font-size: 1.5rem;
      font-weight: 700;
      color: #1f2937;
      margin-bottom: 1rem;
    }
    
    .dark .category-title {
      color: #ffffff;
    }
    
    .category-description {
      color: #6b7280;
      line-height: 1.6;
      font-size: 0.95rem;
    }
    
    .dark .category-description {
      color: #d1d5db;
    }
    
    .category-glow {
      position: absolute;
      top: -50%;
      left: -50%;
      width: 200%;
      height: 200%;
      background: radial-gradient(circle, rgba(59, 130, 246, 0.15), transparent);
      opacity: 0;
      transition: opacity 0.5s ease;
    }
    
    .category-card:hover .category-glow {
      opacity: 1;
    }
    
    @keyframes icon-bounce {
      0% { transform: scale(0) rotate(-180deg); }
      50% { transform: scale(1.2) rotate(-90deg); }
      100% { transform: scale(1) rotate(0deg); }
    }
    
    /* Newsletter Section */
    .newsletter-container {
      background: rgba(255, 255, 255, 0.1);
      backdrop-filter: blur(20px);
      border: 1px solid rgba(255, 255, 255, 0.2);
      border-radius: 30px;
      padding: 4rem 3rem;
      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
    }
    
    .dark .newsletter-container {
      background: rgba(31, 41, 55, 0.4);
      border: 1px solid rgba(75, 85, 99, 0.3);
    }
    
    .newsletter-subtitle {
      font-size: 1.125rem;
      color: #6b7280;
      line-height: 1.7;
      max-width: 500px;
      margin: 0 auto;
    }
    
    .dark .newsletter-subtitle {
      color: #d1d5db;
    }
    
    .newsletter-form {
      max-width: 500px;
      margin: 0 auto 2rem;
    }
    
    .form-group {
      display: flex;
      flex-direction: column;
      gap: 1rem;
    }
    
    @media (min-width: 640px) {
      .form-group {
        flex-direction: row;
      }
    }
    
    .newsletter-input {
      flex: 1;
      padding: 1rem 1.5rem;
      background: rgba(255, 255, 255, 0.9);
      border: 1px solid rgba(255, 255, 255, 0.3);
      border-radius: 15px;
      color: #1f2937;
      font-size: 1rem;
      backdrop-filter: blur(10px);
      transition: all 0.3s ease;
    }
    
    .dark .newsletter-input {
      background: rgba(31, 41, 55, 0.9);
      color: #ffffff;
      border: 1px solid rgba(75, 85, 99, 0.5);
    }
    
    .newsletter-input:focus {
      outline: none;
      border-color: #3b82f6;
      box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
    }
    
    .newsletter-button {
      position: relative;
      padding: 1rem 2rem;
      background: linear-gradient(45deg, #3b82f6, #8b5cf6);
      color: white;
      border: none;
      border-radius: 15px;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s ease;
      overflow: hidden;
    }
    
    .newsletter-button:hover {
      transform: translateY(-2px);
      box-shadow: 0 10px 25px rgba(59, 130, 246, 0.4);
    }
    
    .newsletter-features {
      display: flex;
      justify-content: center;
      gap: 2rem;
      flex-wrap: wrap;
    }
    
    .feature-item {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      color: #6b7280;
      font-size: 0.875rem;
    }
    
    .dark .feature-item {
      color: #d1d5db;
    }
    
    .feature-icon {
      font-size: 1.25rem;
    }
    
    /* Animated Grid Background */
    .animated-grid {
      width: 100%;
      height: 100%;
      background-image: 
        linear-gradient(rgba(59, 130, 246, 0.1) 1px, transparent 1px),
        linear-gradient(90deg, rgba(59, 130, 246, 0.1) 1px, transparent 1px);
      background-size: 50px 50px;
      animation: grid-move 20s linear infinite;
    }
    
    @keyframes grid-move {
      0% { transform: translate(0, 0); }
      100% { transform: translate(50px, 50px); }
    }
    
    /* CTA Section Styles */
    .animated-gradient {
      background-size: 400% 400%;
      animation: gradient-flow 8s ease infinite;
    }
    
    @keyframes gradient-flow {
      0%, 100% { background-position: 0% 50%; }
      50% { background-position: 100% 50%; }
    }
    
    .animated-pattern {
      width: 100%;
      height: 100%;
      background-image: 
        radial-gradient(circle at 25% 25%, rgba(255, 255, 255, 0.2) 2px, transparent 2px),
        radial-gradient(circle at 75% 75%, rgba(255, 255, 255, 0.2) 2px, transparent 2px);
      background-size: 80px 80px;
      animation: pattern-drift 25s linear infinite;
    }
    
    @keyframes pattern-drift {
      0% { transform: translate(0, 0); }
      100% { transform: translate(80px, 80px); }
    }
    
    .cta-title {
      font-size: clamp(2.5rem, 6vw, 4rem);
      font-weight: 900;
      color: white;
      text-align: center;
    }
    
    .cta-subtitle {
      font-size: 1.25rem;
      color: rgba(255, 255, 255, 0.9);
      text-align: center;
      max-width: 600px;
      margin: 0 auto;
      line-height: 1.6;
    }
    
    .cta-buttons {
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: 2rem;
    }
    
    @media (min-width: 640px) {
      .cta-buttons {
        flex-direction: row;
        justify-content: center;
      }
    }
    
    .cta-primary {
      position: relative;
      display: inline-flex;
      align-items: center;
      padding: 1.25rem 3rem;
      background: rgba(255, 255, 255, 0.2);
      backdrop-filter: blur(20px);
      color: white;
      font-weight: 600;
      font-size: 1.1rem;
      border-radius: 50px;
      border: 1px solid rgba(255, 255, 255, 0.3);
      text-decoration: none;
      transition: all 0.3s ease;
      overflow: hidden;
    }
    
    .cta-primary:hover {
      background: rgba(255, 255, 255, 0.3);
      transform: translateY(-3px);
      box-shadow: 0 25px 50px rgba(0, 0, 0, 0.3);
    }
    
    .button-shine {
      position: absolute;
      top: -50%;
      left: -50%;
      width: 200%;
      height: 200%;
      background: linear-gradient(45deg, transparent, rgba(255, 255, 255, 0.1), transparent);
      transform: rotate(45deg);
      transition: all 0.6s ease;
      opacity: 0;
    }
    
    .cta-primary:hover .button-shine,
    .newsletter-button:hover .button-shine {
      opacity: 1;
      transform: rotate(45deg) translate(50%, 50%);
    }
    
    .contact-info {
      color: rgba(255, 255, 255, 0.9);
      font-size: 1rem;
    }
    
    .phone-link {
      color: white;
      font-weight: 600;
      text-decoration: none;
      transition: all 0.3s ease;
    }
    
    .phone-link:hover {
      color: rgba(255, 255, 255, 0.8);
    }
    
    @keyframes fade-in-up {
      0% { transform: translateY(30px); opacity: 0; }
      100% { transform: translateY(0); opacity: 1; }
    }
    
    /* Responsive Design */
    @media (max-width: 768px) {
      .newsletter-container {
        padding: 2.5rem 1.5rem;
      }
      
      .newsletter-features {
        gap: 1rem;
      }
    }
    
    /* Accessibility */
    @media (prefers-reduced-motion: reduce) {
      *, *::before, *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
      }
    }
  </style>

  <!-- Advanced Particle System for Blog -->
  <script>
    class BlogParticleSystem {
      constructor(canvas) {
        this.canvas = canvas;
        this.ctx = canvas.getContext('2d');
        this.particles = [];
        this.particleCount = 30;
        this.mouse = { x: 0, y: 0 };
        this.init();
      }
      
      init() {
        this.resize();
        this.createParticles();
        this.bindEvents();
        this.animate();
      }
      
      resize() {
        this.canvas.width = this.canvas.offsetWidth;
        this.canvas.height = this.canvas.offsetHeight;
      }
      
      createParticles() {
        for (let i = 0; i < this.particleCount; i++) {
          this.particles.push({
            x: Math.random() * this.canvas.width,
            y: Math.random() * this.canvas.height,
            vx: (Math.random() - 0.5) * 0.3,
            vy: (Math.random() - 0.5) * 0.3,
            radius: Math.random() * 2 + 1,
            opacity: Math.random() * 0.4 + 0.1,
            color: Math.random() > 0.5 ? '#3b82f6' : '#8b5cf6'
          });
        }
      }
      
      bindEvents() {
        window.addEventListener('resize', () => this.resize());
        this.canvas.addEventListener('mousemove', (e) => {
          const rect = this.canvas.getBoundingClientRect();
          this.mouse.x = e.clientX - rect.left;
          this.mouse.y = e.clientY - rect.top;
        });
      }
      
      updateParticles() {
        this.particles.forEach(particle => {
          particle.x += particle.vx;
          particle.y += particle.vy;
          
          // Mouse interaction
          const dx = this.mouse.x - particle.x;
          const dy = this.mouse.y - particle.y;
          const distance = Math.sqrt(dx * dx + dy * dy);
          
          if (distance < 80) {
            const force = (80 - distance) / 80;
            particle.vx += dx * force * 0.0005;
            particle.vy += dy * force * 0.0005;
          }
          
          // Boundary bounce
          if (particle.x <= 0 || particle.x >= this.canvas.width) {
            particle.vx *= -1;
          }
          if (particle.y <= 0 || particle.y >= this.canvas.height) {
            particle.vy *= -1;
          }
          
          // Keep within bounds
          particle.x = Math.max(0, Math.min(this.canvas.width, particle.x));
          particle.y = Math.max(0, Math.min(this.canvas.height, particle.y));
          
          // Damping
          particle.vx *= 0.99;
          particle.vy *= 0.99;
        });
      }
      
      drawParticles() {
        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);
        
        // Draw connections
        this.particles.forEach((particle, i) => {
          this.particles.slice(i + 1).forEach(otherParticle => {
            const dx = particle.x - otherParticle.x;
            const dy = particle.y - otherParticle.y;
            const distance = Math.sqrt(dx * dx + dy * dy);
            
            if (distance < 100) {
              this.ctx.beginPath();
              this.ctx.strokeStyle = `rgba(59, 130, 246, ${(100 - distance) / 100 * 0.15})`;
              this.ctx.lineWidth = 1;
              this.ctx.moveTo(particle.x, particle.y);
              this.ctx.lineTo(otherParticle.x, otherParticle.y);
              this.ctx.stroke();
            }
          });
        });
        
        // Draw particles
        this.particles.forEach(particle => {
          this.ctx.beginPath();
          this.ctx.arc(particle.x, particle.y, particle.radius, 0, Math.PI * 2);
          this.ctx.fillStyle = particle.color;
          this.ctx.globalAlpha = particle.opacity;
          this.ctx.fill();
          this.ctx.globalAlpha = 1;
        });
      }
      
      animate() {
        this.updateParticles();
        this.drawParticles();
        requestAnimationFrame(() => this.animate());
      }
    }
    
    // Initialize blog particle system
    document.addEventListener('DOMContentLoaded', () => {
      const canvas = document.getElementById('blog-particles');
      if (canvas) {
        new BlogParticleSystem(canvas);
      }
    });
  </script>
</BaseLayout>