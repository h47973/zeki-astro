---
import BaseLayout from '../../layouts/BaseLayout.astro';

const services = [
  {
    title: "Full-Stack Development",
    description: "End-to-end web applications with modern frameworks and best practices",
    icon: "fi fi-ss-laptop",
    technologies: ["React", "Node.js", "TypeScript", "PostgreSQL", "GraphQL"],
    features: ["Scalable Architecture", "Real-time Features", "API Development", "Database Design"],
    gradient: "from-blue-500 to-cyan-500",
    href: "/services/software-development"
  },
  {
    title: "Mobile Development",
    description: "Native and cross-platform mobile apps that users love",
    icon: "fi fi-ss-mobile-button", 
    technologies: ["React Native", "Flutter", "Swift", "Kotlin"],
    features: ["iOS & Android", "Cross-platform", "Native Performance", "App Store Ready"],
    gradient: "from-purple-500 to-pink-500",
    href: "/services/mobile-development"
  },
  {
    title: "Frontend Development",
    description: "Modern, responsive interfaces with exceptional user experience",
    icon: "fi fi-ss-paint-brush",
    technologies: ["React", "Vue.js", "Tailwind", "WordPress"],
    features: ["Responsive Design", "Performance Optimized", "Accessibility", "SEO Ready"],
    gradient: "from-green-500 to-teal-500",
    href: "/services/frontend-development"
  },
  {
    title: "Backend & APIs",
    description: "Robust server infrastructure and scalable API development",
    icon: "fi fi-ss-bolt",
    technologies: ["Node.js", "Python", "Laravel", "AWS"],
    features: ["RESTful APIs", "Microservices", "Cloud Deployment", "Security First"],
    gradient: "from-orange-500 to-red-500",
    href: "/services/backend-development"
  }
];

const stats = [
  { value: "24h", label: "Average matching time" },
  { value: "95%", label: "Client satisfaction rate" },
  { value: "200+", label: "Developers in network" },
  { value: "50+", label: "Technologies covered" }
];
---

<BaseLayout title="Services">
  <!-- Hero Section with Advanced Animations -->
  <section class="relative min-h-screen flex items-center justify-center overflow-hidden bg-gradient-to-br from-gray-50 via-white to-blue-50 dark:from-gray-900 dark:via-gray-800 dark:to-blue-900">
    <!-- Particle Canvas -->
    <div class="absolute inset-0">
      <canvas id="services-particles" class="w-full h-full"></canvas>
    </div>
    
    <!-- Floating Geometric Shapes -->
    <div class="absolute inset-0">
      <div class="floating-shape shape-1"></div>
      <div class="floating-shape shape-2"></div>
      <div class="floating-shape shape-3"></div>
      <div class="floating-shape shape-4"></div>
    </div>
    
    <!-- Morphing Background Shapes -->
    <div class="absolute inset-0">
      <div class="morph-shape morph-1"></div>
      <div class="morph-shape morph-2"></div>
    </div>
    
    <div class="relative z-10 max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
      <!-- Animated Badge -->
      <div class="animated-badge mb-8">
        <span class="pulse-dot"></span>
        Expert developers across all technologies
      </div>
      
      <!-- Main Title with Advanced Animation -->
      <h1 class="hero-title mb-6">
        <span class="title-line">Development Services</span>
        <span class="title-line gradient-text">That Scale</span>
      </h1>
      
      <!-- Enhanced Subtitle -->
      <p class="hero-subtitle mb-12">
        From MVP to enterprise solutions, our hand-vetted developers deliver 
        production-ready code using the latest technologies.
      </p>
    </div>
  </section>

  <!-- Services Grid with Morphing Backgrounds -->
  <section class="py-32 bg-white dark:bg-gray-900 relative overflow-hidden">
    <!-- Morphing Background Shapes -->
    <div class="absolute inset-0">
      <div class="morph-shape morph-3"></div>
      <div class="morph-shape morph-4"></div>
    </div>
    
    <div class="relative z-10 max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center mb-20">
        <h2 class="section-title mb-6">Our Services</h2>
        <div class="title-underline mx-auto"></div>
        <p class="section-subtitle mt-6">
          Comprehensive development solutions tailored to your business needs
        </p>
      </div>
      
      <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
        {services.map((service, index) => (
          <a href={service.href} class="group block">
            <div class="service-card card-tinted" data-aos="zoom-in" data-aos-delay={index * 150}>
              <!-- Gradient border on hover -->
              <div class={`absolute inset-0 bg-gradient-to-r ${service.gradient} rounded-3xl opacity-0 group-hover:opacity-100 transition-opacity duration-300 -z-10`}>
                <div class="absolute inset-[2px] bg-white dark:bg-gray-800 rounded-3xl"></div>
              </div>
              
              <!-- Content -->
              <div class="relative">
                <!-- Icon -->
                <div class="service-icon">
                  <i class={service.icon}></i>
                </div>
                
                <!-- Title -->
                <h3 class="service-title group-hover:text-transparent group-hover:bg-clip-text group-hover:bg-gradient-to-r group-hover:from-blue-600 group-hover:to-purple-600">
                  {service.title}
                </h3>
                
                <!-- Description -->
                <p class="service-description mb-6">
                  {service.description}
                </p>
                
                <!-- Technologies -->
                <div class="flex flex-wrap gap-2 mb-6">
                  {service.technologies.map((tech) => (
                    <span class="tech-badge">
                      {tech}
                    </span>
                  ))}
                </div>
                
                <!-- Features -->
                <div class="space-y-2 mb-6">
                  {service.features.map((feature) => (
                    <div class="feature-item">
                      <svg class="feature-check" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
                      </svg>
                      {feature}
                    </div>
                  ))}
                </div>
                
                <!-- Arrow -->
                <div class="service-arrow">
                  Learn more
                  <svg class="w-4 h-4 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
                  </svg>
                </div>
                
                <!-- Glow Effect -->
                <div class="service-glow"></div>
              </div>
            </div>
          </a>
        ))}
      </div>
    </div>
  </section>

  <!-- Stats Section -->
  <section class="py-24 bg-gray-50 dark:bg-gray-800">
    <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center mb-16">
        <h2 class="text-3xl md:text-5xl font-bold text-gray-900 dark:text-white mb-4">
          Why Teams Choose Us
        </h2>
        <p class="text-xl text-gray-600 dark:text-gray-300">
          Trusted by companies worldwide for their most critical projects
        </p>
      </div>
      
      <div class="grid grid-cols-2 md:grid-cols-4 gap-8">
        {stats.map((stat, index) => (
          <div class="text-center group" style={`animation-delay: ${index * 100}ms`}>
            <div class="text-4xl md:text-5xl font-bold text-gray-900 dark:text-white mb-2 group-hover:scale-110 transition-transform duration-200">
              {stat.value}
            </div>
            <div class="text-sm text-gray-600 dark:text-gray-400 font-medium">
              {stat.label}
            </div>
          </div>
        ))}
      </div>
    </div>
  </section>

  <!-- Process Section -->
  <section class="py-24 bg-white dark:bg-gray-900">
    <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center mb-16">
        <h2 class="text-3xl md:text-5xl font-bold text-gray-900 dark:text-white mb-4">
          How It Works
        </h2>
        <p class="text-xl text-gray-600 dark:text-gray-300">
          Get matched with expert developers in just 3 simple steps
        </p>
      </div>
      
      <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
        <div class="text-center group">
          <div class="w-16 h-16 bg-gradient-to-r from-blue-500 to-purple-500 text-white rounded-2xl flex items-center justify-center font-bold text-2xl mb-6 mx-auto group-hover:scale-110 transition-transform duration-200">
            1
          </div>
          <h3 class="text-xl font-bold text-gray-900 dark:text-white mb-4">Tell Us Your Needs</h3>
          <p class="text-gray-600 dark:text-gray-400 leading-relaxed">
            Share your project requirements, timeline, and technology preferences with our team.
          </p>
        </div>
        
        <div class="text-center group">
          <div class="w-16 h-16 bg-gradient-to-r from-purple-500 to-pink-500 text-white rounded-2xl flex items-center justify-center font-bold text-2xl mb-6 mx-auto group-hover:scale-110 transition-transform duration-200">
            2
          </div>
          <h3 class="text-xl font-bold text-gray-900 dark:text-white mb-4">Get Matched in 24h</h3>
          <p class="text-gray-600 dark:text-gray-400 leading-relaxed">
            We connect you with pre-vetted developers who match your specific requirements.
          </p>
        </div>
        
        <div class="text-center group">
          <div class="w-16 h-16 bg-gradient-to-r from-pink-500 to-red-500 text-white rounded-2xl flex items-center justify-center font-bold text-2xl mb-6 mx-auto group-hover:scale-110 transition-transform duration-200">
            3
          </div>
          <h3 class="text-xl font-bold text-gray-900 dark:text-white mb-4">Start Building</h3>
          <p class="text-gray-600 dark:text-gray-400 leading-relaxed">
            Begin your project with confidence, knowing you have the right talent on your team.
          </p>
        </div>
      </div>
    </div>
  </section>

  <!-- CTA Section -->
  <section class="py-24 bg-gradient-to-r from-blue-600 via-purple-600 to-blue-600 bg-300% animate-gradient">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
      <h2 class="text-3xl md:text-5xl font-bold text-white mb-6">
        Ready to Scale Your Development?
      </h2>
      <p class="text-xl text-blue-100 mb-12 max-w-2xl mx-auto leading-relaxed">
        Stop searching for developers. Get matched with the perfect talent for your project in 24 hours.
      </p>
      
      <div class="flex flex-col sm:flex-row items-center justify-center gap-6">
        <button class="px-8 py-4 bg-white text-blue-600 font-semibold rounded-xl hover:bg-gray-50 transition-all duration-200 hover:scale-105 hover:shadow-xl">
          Get Started Today
        </button>
        
        <div class="text-white/80">
          <span class="text-sm">Call us: </span>
          <a href="tel:+12029925235" class="font-semibold hover:text-white transition-colors">
            +1 (202) 992-5235
          </a>
        </div>
      </div>
    </div>
  </section>

  <!-- Advanced Styles and Animations -->
  <style>
    /* Floating Geometric Shapes */
    .floating-shape {
      position: absolute;
      background: linear-gradient(45deg, rgba(59, 130, 246, 0.1), rgba(147, 51, 234, 0.1));
      border-radius: 50%;
      animation: float-complex 25s infinite ease-in-out;
      backdrop-filter: blur(15px);
    }
    
    .shape-1 { width: 120px; height: 120px; top: 15%; left: 8%; animation-delay: 0s; }
    .shape-2 { width: 90px; height: 90px; top: 30%; right: 15%; animation-delay: 6s; }
    .shape-3 { width: 110px; height: 110px; top: 70%; left: 12%; animation-delay: 12s; }
    .shape-4 { width: 80px; height: 80px; top: 80%; right: 25%; animation-delay: 18s; }
    
    @keyframes float-complex {
      0%, 100% { transform: translate(0px, 0px) rotate(0deg) scale(1); opacity: 0.4; }
      25% { transform: translate(30px, -30px) rotate(90deg) scale(1.1); opacity: 0.7; }
      50% { transform: translate(-25px, 40px) rotate(180deg) scale(0.9); opacity: 0.3; }
      75% { transform: translate(40px, 25px) rotate(270deg) scale(1.05); opacity: 0.8; }
    }
    
    /* Morphing Background Shapes */
    .morph-shape {
      position: absolute;
      border-radius: 60% 40% 30% 70% / 60% 30% 70% 40%;
      animation: morph-services 22s ease-in-out infinite;
      opacity: 0.12;
    }
    
    .dark .morph-shape {
      opacity: 0.1;
    }
    
    .morph-1 {
      width: 350px;
      height: 350px;
      background: linear-gradient(45deg, #3b82f6, #8b5cf6);
      top: 10%;
      left: 5%;
      animation-delay: 0s;
    }
    
    .morph-2 {
      width: 280px;
      height: 280px;
      background: linear-gradient(45deg, #06b6d4, #3b82f6);
      bottom: 15%;
      right: 10%;
      animation-delay: 11s;
    }
    
    .morph-3 {
      width: 300px;
      height: 300px;
      background: linear-gradient(45deg, #8b5cf6, #ec4899);
      top: 25%;
      left: 8%;
      animation-delay: 5s;
    }
    
    .morph-4 {
      width: 320px;
      height: 320px;
      background: linear-gradient(45deg, #10b981, #06b6d4);
      bottom: 20%;
      right: 12%;
      animation-delay: 16s;
    }
    
    @keyframes morph-services {
      0%, 100% { 
        border-radius: 60% 40% 30% 70% / 60% 30% 70% 40%;
        transform: translate(0px, 0px) rotate(0deg);
      }
      50% { 
        border-radius: 30% 60% 70% 40% / 50% 60% 30% 60%;
        transform: translate(40px, -40px) rotate(180deg);
      }
    }
    
    /* Animated Badge */
    .animated-badge {
      display: inline-flex;
      align-items: center;
      padding: 16px 32px;
      background: rgba(255, 255, 255, 0.1);
      backdrop-filter: blur(20px);
      border: 1px solid rgba(255, 255, 255, 0.2);
      border-radius: 50px;
      color: #3b82f6;
      font-weight: 600;
      font-size: 0.95rem;
      animation: badge-float 3s ease-in-out infinite;
    }
    
    .dark .animated-badge {
      color: #60a5fa;
    }
    
    .pulse-dot {
      width: 10px;
      height: 10px;
      background: #3b82f6;
      border-radius: 50%;
      margin-right: 12px;
      animation: pulse-glow 2s ease-in-out infinite;
    }
    
    @keyframes badge-float {
      0%, 100% { transform: translateY(0px); box-shadow: 0 10px 30px rgba(59, 130, 246, 0.2); }
      50% { transform: translateY(-5px); box-shadow: 0 20px 40px rgba(59, 130, 246, 0.4); }
    }
    
    @keyframes pulse-glow {
      0%, 100% { transform: scale(1); box-shadow: 0 0 0 0 rgba(59, 130, 246, 0.7); }
      50% { transform: scale(1.1); box-shadow: 0 0 0 10px rgba(59, 130, 246, 0); }
    }
    
    /* Hero Title Animation */
    .hero-title {
      font-size: clamp(3rem, 8vw, 7rem);
      font-weight: 900;
      line-height: 1.1;
      color: #1f2937;
      text-align: center;
      overflow: hidden;
    }
    
    .dark .hero-title {
      color: #ffffff;
    }
    
    .title-line {
      display: block;
      animation: slide-up-stagger 1.2s cubic-bezier(0.23, 1, 0.32, 1);
    }
    
    .title-line:nth-child(2) {
      animation-delay: 0.2s;
    }
    
    .gradient-text {
      background: linear-gradient(45deg, #3b82f6, #8b5cf6, #ec4899);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
      background-size: 200% 200%;
      animation: gradient-shift 3s ease-in-out infinite;
    }
    
    @keyframes slide-up-stagger {
      0% { transform: translateY(100%); opacity: 0; }
      100% { transform: translateY(0); opacity: 1; }
    }
    
    @keyframes gradient-shift {
      0%, 100% { background-position: 0% 50%; }
      50% { background-position: 100% 50%; }
    }
    
    /* Hero Subtitle */
    .hero-subtitle {
      font-size: clamp(1.125rem, 3vw, 1.5rem);
      color: #6b7280;
      max-width: 800px;
      margin: 0 auto;
      line-height: 1.6;
      animation: fade-in-up 1.5s cubic-bezier(0.23, 1, 0.32, 1) 0.4s both;
    }
    
    .dark .hero-subtitle {
      color: #ffffff !important;
      font-weight: 500;
    }
    
    @keyframes fade-in-up {
      0% { transform: translateY(30px); opacity: 0; }
      100% { transform: translateY(0); opacity: 1; }
    }
    
    /* Section Styling */
    .section-title {
      font-size: clamp(2.5rem, 6vw, 4rem);
      font-weight: 900;
      color: #1f2937;
      text-align: center;
    }
    
    .dark .section-title {
      color: #ffffff !important;
      text-shadow: 0 0 30px rgba(59, 130, 246, 0.5);
    }
    
    .section-subtitle {
      font-size: 1.25rem;
      color: #6b7280;
      text-align: center;
      max-width: 600px;
      margin: 0 auto;
      line-height: 1.7;
    }
    
    .dark .section-subtitle {
      color: #ffffff !important;
      font-weight: 500;
    }
    
    .title-underline {
      width: 80px;
      height: 4px;
      background: linear-gradient(45deg, #3b82f6, #8b5cf6);
      border-radius: 2px;
      animation: expand-underline 2s cubic-bezier(0.23, 1, 0.32, 1);
    }
    
    @keyframes expand-underline {
      0% { width: 0; }
      100% { width: 80px; }
    }
    
    /* Service Cards */
    .service-card {
      position: relative;
      padding: 3rem 2.5rem;
      background: rgba(255, 255, 255, 0.95);
      backdrop-filter: blur(20px);
      border: 1px solid rgba(75, 85, 99, 0.1);
      border-radius: 24px;
      transition: all 0.5s cubic-bezier(0.23, 1, 0.32, 1);
      overflow: hidden;
      box-shadow: 0 6px 24px rgba(75, 85, 99, 0.08);
    }
    
    .dark .service-card {
      background: rgba(31, 41, 55, 0.9);
      border: 1px solid rgba(75, 85, 99, 0.3);
    }
    
    .service-card:hover {
      transform: translateY(-15px) scale(1.02);
      box-shadow: 0 30px 60px rgba(59, 130, 246, 0.3);
    }
    
    .service-icon {
      font-size: 3.5rem;
      margin-bottom: 1.5rem;
      transform: scale(1);
      transition: transform 0.3s ease;
    }
    
    .service-card:hover .service-icon {
      transform: scale(1.1);
    }
    
    .service-title {
      font-size: 1.75rem;
      font-weight: 700;
      color: #1f2937;
      margin-bottom: 1rem;
      transition: all 0.3s ease;
    }
    
    .dark .service-title {
      color: #ffffff !important;
      text-shadow: 0 0 20px rgba(59, 130, 246, 0.3);
    }
    
    .service-description {
      color: #6b7280;
      line-height: 1.6;
      font-size: 1rem;
    }
    
    .dark .service-description {
      color: #ffffff !important;
      font-weight: 500;
    }
    
    .tech-badge {
      padding: 0.5rem 1rem;
      background: rgba(59, 130, 246, 0.1);
      color: #3b82f6;
      border-radius: 20px;
      font-size: 0.75rem;
      font-weight: 500;
      border: 1px solid rgba(59, 130, 246, 0.2);
      transition: all 0.3s ease;
    }
    
    .dark .tech-badge {
      background: rgba(59, 130, 246, 0.2);
      color: #60a5fa;
      border: 1px solid rgba(59, 130, 246, 0.3);
    }
    
    .tech-badge:hover {
      background: rgba(59, 130, 246, 0.2);
      transform: scale(1.05);
    }
    
    .feature-item {
      display: flex;
      align-items: center;
      font-size: 0.875rem;
      color: #6b7280;
    }
    
    .dark .feature-item {
      color: #d1d5db;
    }
    
    .feature-check {
      width: 1rem;
      height: 1rem;
      color: #10b981;
      margin-right: 0.75rem;
      flex-shrink: 0;
    }
    
    .service-arrow {
      display: flex;
      align-items: center;
      color: #3b82f6;
      font-weight: 600;
      transition: transform 0.3s ease;
    }
    
    .dark .service-arrow {
      color: #60a5fa;
    }
    
    .service-card:hover .service-arrow {
      transform: translateX(8px);
    }
    
    .service-glow {
      position: absolute;
      top: -50%;
      left: -50%;
      width: 200%;
      height: 200%;
      background: radial-gradient(circle, rgba(59, 130, 246, 0.15), transparent);
      opacity: 0;
      transition: opacity 0.5s ease;
    }
    
    .service-card:hover .service-glow {
      opacity: 1;
    }
    
    /* CTA Enhancements */
    .bg-300\% {
      background-size: 300% 300%;
    }
    
    @keyframes gradient {
      0%, 100% { background-position: 0% 50%; }
      50% { background-position: 100% 50%; }
    }
    
    .animate-gradient {
      animation: gradient 8s ease infinite;
    }
    
    /* Dark mode text fixes */
    .dark h2, .dark h3 {
      color: #ffffff !important;
      text-shadow: 0 0 20px rgba(59, 130, 246, 0.3);
    }
    
    .dark p {
      color: #ffffff !important;
      font-weight: 500;
    }
    
    /* Accessibility */
    @media (prefers-reduced-motion: reduce) {
      *, *::before, *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
      }
    }
  </style>

  <!-- Advanced Particle System for Services -->
  <script>
    class ServicesParticleSystem {
      constructor(canvas) {
        this.canvas = canvas;
        this.ctx = canvas.getContext('2d');
        this.particles = [];
        this.particleCount = 35;
        this.mouse = { x: 0, y: 0 };
        this.init();
      }
      
      init() {
        this.resize();
        this.createParticles();
        this.bindEvents();
        this.animate();
      }
      
      resize() {
        this.canvas.width = this.canvas.offsetWidth;
        this.canvas.height = this.canvas.offsetHeight;
      }
      
      createParticles() {
        for (let i = 0; i < this.particleCount; i++) {
          this.particles.push({
            x: Math.random() * this.canvas.width,
            y: Math.random() * this.canvas.height,
            vx: (Math.random() - 0.5) * 0.3,
            vy: (Math.random() - 0.5) * 0.3,
            radius: Math.random() * 2 + 1,
            opacity: Math.random() * 0.4 + 0.1,
            color: Math.random() > 0.6 ? '#3b82f6' : '#8b5cf6'
          });
        }
      }
      
      bindEvents() {
        window.addEventListener('resize', () => this.resize());
        this.canvas.addEventListener('mousemove', (e) => {
          const rect = this.canvas.getBoundingClientRect();
          this.mouse.x = e.clientX - rect.left;
          this.mouse.y = e.clientY - rect.top;
        });
      }
      
      updateParticles() {
        this.particles.forEach(particle => {
          particle.x += particle.vx;
          particle.y += particle.vy;
          
          // Mouse interaction
          const dx = this.mouse.x - particle.x;
          const dy = this.mouse.y - particle.y;
          const distance = Math.sqrt(dx * dx + dy * dy);
          
          if (distance < 80) {
            const force = (80 - distance) / 80;
            particle.vx += dx * force * 0.0006;
            particle.vy += dy * force * 0.0006;
          }
          
          // Boundary bounce
          if (particle.x <= 0 || particle.x >= this.canvas.width) {
            particle.vx *= -1;
          }
          if (particle.y <= 0 || particle.y >= this.canvas.height) {
            particle.vy *= -1;
          }
          
          // Keep within bounds
          particle.x = Math.max(0, Math.min(this.canvas.width, particle.x));
          particle.y = Math.max(0, Math.min(this.canvas.height, particle.y));
          
          // Damping
          particle.vx *= 0.99;
          particle.vy *= 0.99;
        });
      }
      
      drawParticles() {
        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);
        
        // Draw connections
        this.particles.forEach((particle, i) => {
          this.particles.slice(i + 1).forEach(otherParticle => {
            const dx = particle.x - otherParticle.x;
            const dy = particle.y - otherParticle.y;
            const distance = Math.sqrt(dx * dx + dy * dy);
            
            if (distance < 100) {
              this.ctx.beginPath();
              this.ctx.strokeStyle = `rgba(59, 130, 246, ${(100 - distance) / 100 * 0.15})`;
              this.ctx.lineWidth = 1;
              this.ctx.moveTo(particle.x, particle.y);
              this.ctx.lineTo(otherParticle.x, otherParticle.y);
              this.ctx.stroke();
            }
          });
        });
        
        // Draw particles
        this.particles.forEach(particle => {
          this.ctx.beginPath();
          this.ctx.arc(particle.x, particle.y, particle.radius, 0, Math.PI * 2);
          this.ctx.fillStyle = particle.color;
          this.ctx.globalAlpha = particle.opacity;
          this.ctx.fill();
          this.ctx.globalAlpha = 1;
        });
      }
      
      animate() {
        this.updateParticles();
        this.drawParticles();
        requestAnimationFrame(() => this.animate());
      }
    }
    
    // Initialize systems when DOM is ready
    document.addEventListener('DOMContentLoaded', () => {
      // Initialize particle system
      const canvas = document.getElementById('services-particles');
      if (canvas) {
        new ServicesParticleSystem(canvas);
      }
      
      // Enhanced card interactions
      document.querySelectorAll('.service-card').forEach((card, index) => {
        card.style.opacity = '0';
        card.style.transform = 'translateY(30px)';
        card.style.transition = 'all 0.6s cubic-bezier(0.23, 1, 0.32, 1)';
        
        setTimeout(() => {
          card.style.opacity = '1';
          card.style.transform = 'translateY(0)';
        }, index * 200);
      });
      
      // Parallax effect for floating shapes
      window.addEventListener('scroll', () => {
        const scrolled = window.pageYOffset;
        const parallax = scrolled * 0.5;
        
        document.querySelectorAll('.floating-shape').forEach((shape, index) => {
          const speed = 0.1 + (index * 0.015);
          shape.style.transform = `translate3d(0, ${parallax * speed}px, 0)`;
        });
        
        document.querySelectorAll('.morph-shape').forEach((shape, index) => {
          const speed = 0.05 + (index * 0.01);
          shape.style.transform = `translate3d(0, ${parallax * speed}px, 0)`;
        });
      });
    });
  </script>
</BaseLayout>